name: Security CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  security-events: write
  actions: read
  contents: read

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript,typescript
          queries: security-extended

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Security Webhook
        if: always()
        run: |
          if [ -n "${{ secrets.SECURITY_WEBHOOK_URL }}" ]; then
            curl -X POST ${{ secrets.SECURITY_WEBHOOK_URL }} \
              -H "Content-Type: application/json" \
              -d "{\"scan_type\":\"${{ job.name }}\",\"status\":\"${{ job.status }}\",\"results_url\":\"https://github.com/${{ github.repository }}/security\"}"
          fi

      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: 'general'
          payload: |
            {
              "text": "Security Scan - ${{ job.name }}: ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Security Scan Results*\nJob: ${{ job.name }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Status*: ${{ job.status }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://github.com/${{ github.repository }}/security|View Security Dashboard>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  snyk:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install -g pnpm
      - run: pnpm install
      - run: pnpm add ./components/external/zod-react-form-auto
      - uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --all-projects
        continue-on-error: true

      - name: Notify Security Webhook
        if: always()
        run: |
          if [ -n "${{ secrets.SECURITY_WEBHOOK_URL }}" ]; then
            curl -X POST ${{ secrets.SECURITY_WEBHOOK_URL }} \
              -H "Content-Type: application/json" \
              -d "{\"scan_type\":\"snyk\",\"status\":\"${{ job.status }}\",\"results_url\":\"https://github.com/${{ github.repository }}/security/dependabot\"}"
          fi

      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: 'general'
          payload: |
            {
              "text": "Security Scan - Snyk: ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Snyk Security Scan Results*"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Status*: ${{ job.status }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://github.com/${{ github.repository }}/security/dependabot|View Dependency Alerts>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  trufflehog:
    name: TruffleHog Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run TruffleHog Secret Scan
        uses: docker://trufflesecurity/trufflehog:latest
        with:
          args: "git file://. --json --fail"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Security Webhook
        if: always()
        run: |
          if [ -n "${{ secrets.SECURITY_WEBHOOK_URL }}" ]; then
            curl -X POST ${{ secrets.SECURITY_WEBHOOK_URL }} \
              -H "Content-Type: application/json" \
              -d "{\"scan_type\":\"${{ job.name }}\",\"status\":\"${{ job.status }}\",\"results_url\":\"https://github.com/${{ github.repository }}/security\"}"
          fi

      - name: Notify Slack
        if: always()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: 'general'
          payload: |
            {
              "text": "Security Scan - ${{ job.name }}: ${{ job.status }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Security Scan Results*\nJob: ${{ job.name }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Status*: ${{ job.status }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<https://github.com/${{ github.repository }}/security|View Security Dashboard>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
